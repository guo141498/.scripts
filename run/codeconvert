#!/bin/ruby
# encoding: utf-8

# This module provide method to convert number from system to system
module Converter
  public

  LETTERNUM = (0..9).map { |x| x.to_s }.to_a + ('a'..'z').to_a
  KEYPAD = (33..126).map { |x| x.chr }

  def Converter.todemical(array, max)
    array.reduce(0) { |a, e| a * max + e }
  end

  def Converter.demicalto(num, max)
    res = []
    while num > 0
      res << num % max
      num /= max
    end
    res.reverse
  end
end

string, mode = $stdin.read.chomp, ARGV[0]

maparr = case mode[0]
         when 'l' then Converter::LETTERNUM
         when 'k' then Converter::KEYPAD
         end

getarr = ->(str) { str.each_char.map { |s| maparr.index(s) } }
getstr = ->(arr) { arr.map { |x| maparr[x] }.join('') }

if mode[1] == 'r'
  puts getstr.call(Converter.demicalto(string.to_i, maparr.size))
else
  puts Converter.todemical(getarr.call(string), maparr.size)
end
